role user (Ui, RA, GWN, SDj: agent, H : hash_func,
SKuira : symmetric_key, Snd, Rcv: channel(dy))
played_by Ui
def=
local State: nat, IDi, IDsdj, IDgwn, PWi, BIOi, RPWi, A: text,
R, Kgwnui, Kgwnsdj, Rgwn, Rsdj, M1, Rui, TIDi,TIDinew: text,
M2, M3, T3, T4, T1, Sigmai: text, Gen, Rep : hash_func
const ui_gwn_t1, ui_gwn_rui, gwn_ui_t4, gwn_ui_tidinew,sr1: protocol_id
init State := 0
transition
1. State = 0 /\ Rcv(start) =|>
% Registration phase
State' := 1 /\ A' := new() /\ R' := new()
/\ secret({PWi, BIOi, A', R'}, sr1, Ui)
/\ Sigmai' := Gen(BIOi) /\ RPWi' := xor(H(PWi.Sigmai'.A'), R')
% Send registration request securely to RA
/\ Snd({IDi.RPWi'}_SKuira)

% Receive information securely from RA for SPi
2. State = 1/\Rcv({xor(H(IDi.Kgwnui),xor(H(PWi.Sigmai'.A'),R')).TIDi'}_SKuira)=|>
% Login phase
State' := 2
% Send login request to GWN via public channel
/\ Rui' := new() /\ T1' := new()/\ M1' := H(IDi.Kgwnui)
/\ M2' := xor(M1', Rui') /\ M3' := H(M2'.T1'.IDi'.TIDi'.Rui')
/\ Snd(TIDi'.M2'.M3'.T1')
% Ui has freshly generated the values T1 and Rui for GWN
/\ witness(Ui,GWN,ui_gwn_t1, T1')
/\ witness(Ui,GWN,ui_gwn_rui,Rui')
% Authentication and key agreement phase

% Receive authentication reply from GWN via public channel
3. State = 2 /\ Rcv({Rui'.Rgwn'.Rsdj'.IDi.IDsdj.IDgwn.
H(H(IDsdj.Kgwnsdj))}_H(IDi.Kgwnui).
xor(TIDinew', H(TIDi'.H(IDi.Kgwnui).T3'.T4')).
H(H(H(IDi.IDsdj.IDgwn.Rui'.Rgwn'.Rsdj'.
H(H(IDi.Kgwnui)).H(H(IDsdj.Kgwnsdj))).T3').T4'.Rui').T3'.T4')=|>
% Ui's acceptance of T4 and TIDinew generated for Ui by GWN
State' := 3/\request(GWN,Ui,gwn_ui_t4,T4')/\request(GWN,Ui,gwn_ui_tidinew,TIDinew')
end role
 

role registrationauthority (Ui, RA, GWN, SDj: agent, H : hash_func,
SKuira : symmetric_key, Snd, Rcv: channel(dy))
played_by RA
def=
local State: nat, IDi, IDsdj, IDgwn, PWi, BIOi, RPWi, A, Ai: text,
R, Kgwnui, Kgwnsdj, Rgwn, Rsdj, T1, M1, Rui, TIDi,TIDinew: text,
M2, M3, T3, T4, Sigmai: text, Gen, Rep : hash_func
const sr2,sr3: protocol_id
init State := 0
transition
1. State = 0 /\ Rcv({IDi.RPWi'}_SKuira) =|>
State' := 1 /\ Kgwnui' := new()
/\ secret(Kgwnui, sr2, {RA,GWN,Ui})
/\ secret(Kgwnsdj, sr3, {RA,GWN,SDj})
/\ Ai' := xor(H(IDi.Kgwnui'), RPWi')
/\ TIDi' := new()
/\ Snd({Ai'.TIDi'}_SKuira)

end role


role gatewaynode (Ui, RA, GWN, SDj: agent, H : hash_func,
SKuira : symmetric_key, Snd, Rcv: channel(dy))
played_by GWN
def=
local State: nat, IDi, IDsdj, IDgwn, PWi, BIOi, RPWi, A: text,
R, Kgwnui, Kgwnsdj, Rgwn, Rsdj, T1, T2, M1, Rui, TIDi,TIDinew, Ruistar: text,
M2, M3, M4, M6, M7, M8, M10, M11, M12, T3, T4, Sigmai: text, Gen, Rep : hash_func
const gwn_sdj_t2, gwn_sdj_rgwn, sdj_gwn_t3, sdj_gwn_rsdj, ui_gwn_t1, ui_gwn_rui, gwn_ui_t4, gwn_ui_tidinew: protocol_id
init State := 0
transition
1. State = 0 /\ Rcv(TIDi'.xor(H(IDi.Kgwnui), Rui').H(xor(H(IDi.Kgwnui), Rui').T1'.IDi'.TIDi'.Rui').T1') =|>
State' := 1 /\ M4' := H(IDi.Kgwnui)
/\ request(Ui,GWN,ui_gwn_t1, T1')
/\ request(Ui,GWN,ui_gwn_rui,Rui')
/\ Ruistar' := xor(M2', M4')
/\ Rgwn' := new()
/\ T2' := new()
/\ M6' := H(IDsdj.Kgwnsdj)
/\ M7' := {IDi.IDgwn.Ruistar'.Rgwn.H(M4')}_M6'
/\ M8' := H(M6'.T2'.IDi.IDsdj.IDgwn.Rgwn')
/\ Snd(M7'.M8'.T2')
/\ witness(GWN,SDj,gwn_sdj_t2, T2')
/\ witness(GWN,SDj,gwn_sdj_rgwn, Rgwn')

2. State = 1 /\ Rcv(M10'.M11'.M12'.T3') =|>
State' := 2
/\ request(SDj,GWN,sdj_gwn_t3, T3')
/\ request(SDj,GWN,sdj_gwn_rsdj, Rsdj')
/\ T4' := new()
/\ TIDinew' := new()
/\ Snd({Rui'.Rgwn'.Rsdj'.IDi.IDsdj.IDgwn.
H(H(IDsdj.Kgwnsdj))}_H(IDi.Kgwnui).
xor(TIDinew', H(TIDi'.H(IDi.Kgwnui).T3'.T4')).
H(H(H(IDi.IDsdj.IDgwn.Rui'.Rgwn'.Rsdj'.
H(H(IDi.Kgwnui)).H(H(IDsdj.Kgwnsdj))).T3').T4'.Rui').T3'.T4')
/\ witness(GWN,Ui,gwn_ui_t4, T4')
/\ witness(GWN,Ui,gwn_ui_tidinew, TIDinew')
end role



role smartdevice (Ui, RA, GWN, SDj: agent, H : hash_func,
SKuira : symmetric_key, Snd, Rcv: channel(dy))
played_by SDj
def=
local State: nat, IDi, IDsdj, IDgwn, PWi, BIOi, RPWi, A: text,
R, Kgwnui, Kgwnsdj, Rgwn, Rsdj, T2, M1, Rui, TIDi,TIDinew, Ruistar: text,
M2, M3, M4, M6, M7, M8, M10, M11, M12, T3, T4, Sigmai: text, Gen, Rep : hash_func
const gwn_sdj_t2, gwn_sdj_rgwn, sdj_gwn_t3, sdj_gwn_rsdj: protocol_id
init State := 0
transition
1. State = 0 /\ Rcv({IDi.IDgwn.Ruistar'.Rgwn'.H(M4')}_M6'.M8'.T2') =|>
State' := 1
/\ request(GWN,SDj,gwn_sdj_t2, T2')
/\ request(GWN,SDj,gwn_sdj_rgwn, Rgwn')
/\ Rsdj' := new()
/\ T3' := new()
/\ M10' := xor(H(H(IDsdj.Kgwnsdj').T3'), Rsdj')
/\ M11' := H(H(IDi.IDsdj.IDgwn.Ruistar'.Rgwn'.Rsdj'.H(M4').H(H(IDsdj.Kgwnsdj)).T3'))
/\ M12' := H(Rsdj'.Rgwn'.IDsdj.IDgwn.T3')
/\ Snd(M10'.M11'.M12'.T3')
/\ witness(SDj,GWN,sdj_gwn_t3, T3')
/\ witness(SDj,GWN,sdj_gwn_rsdj, Rsdj')

end role

role session (Ui, RA, GWN, SDj: agent, H: hash_func, SKuira: symmetric_key)
def=
local S1, R1, S2, R2, S3, R3, S4, R4: channel (dy)
composition
user (Ui, RA, GWN, SDj, H, SKuira, S1, R1)
/\ registrationauthority(Ui, RA, GWN, SDj, H, SKuira, S2, R2)
/\ gatewaynode (Ui, RA, GWN, SDj, H, SKuira, S3, R3)
/\ smartdevice (Ui, RA, GWN, SDj, H, SKuira, S2, R2)
end role

role environment()
def=
const ui, ra, gwn, sdj: agent, h: hash_func, skuira: symmetric_key,
kgwnui, kgwnsdj, idi, idsnj, idgwn, t1, t2, t3, t4, tidi, tidinew: text,
gen, rep: hash_func, ui_gwn_t1, ui_gwn_rui, gwn_sdj_t2, gwn_sdj_rgwn,
sdj_gwn_t3, sdj_gwn_rsdj, sr1, sr2, sr3: protocol_id
intruder_knowledge ={t1, t2, t3, t4, h, gen, rep}
composition
session(ui, ra, gwn, sdj, h, skuira) /\ session(i, ra, gwn, sdj, h, skuira)
/\ session(ui, i, gwn, sdj, h, skuira) /\ session(ui, ra, i, sdj, h, skuira)
/\ session(ui, ra, gwn, i, h, skuira)
end role
goal
secrecy_of sr1, sr2, sr3
authentication_on ui_gwn_t1, ui_gwn_rui, gwn_sdj_t2
authentication_on gwn_sdj_rgwn, sdj_gwn_t3, sdj_gwn_rsdj
authentication_on gwn_ui_t4, gwn_ui_tidinew
end goal
environment()
